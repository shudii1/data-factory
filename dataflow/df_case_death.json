{
	"name": "df_case_death",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_case_death",
						"type": "DatasetReference"
					},
					"name": "CaseAndDeath"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "CountryLookUp"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "filterCaseDeathData"
				},
				{
					"name": "selectRawcaseDeathData"
				},
				{
					"name": "pivotCount"
				},
				{
					"name": "lookupCountry"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          country_code as string,",
				"          continent as string,",
				"          population as integer,",
				"          indicator as string,",
				"          daily_count as integer,",
				"          date as date,",
				"          rate_14_day as double,",
				"          source as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CaseAndDeath",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CountryLookUp",
				"CaseAndDeath filter(continent=='Europe' && not(isNull(country_code))) ~> filterCaseDeathData",
				"filterCaseDeathData select(mapColumn(",
				"          country,",
				"          country_code,",
				"          population,",
				"          indicator,",
				"          daily_count,",
				"          date,",
				"          source,",
				"          case_indicator = indicator",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectRawcaseDeathData",
				"selectRawcaseDeathData pivot(groupBy(country,",
				"          country_code,",
				"          population,",
				"          date,",
				"          source),",
				"     pivotBy(indicator, ['confirmed_cases', 'deaths']),",
				"     count = sum(daily_count),",
				"     columnNaming: '$N_$V',",
				"     lateral: true) ~> pivotCount",
				"pivotCount lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountry"
			]
		}
	}
}