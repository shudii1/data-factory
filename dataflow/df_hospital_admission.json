{
	"name": "df_hospital_admission",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_hospital_admission",
						"type": "DatasetReference"
					},
					"name": "hospitalAdmission"
				},
				{
					"dataset": {
						"referenceName": "ds_country_lookup",
						"type": "DatasetReference"
					},
					"name": "countrySource"
				},
				{
					"dataset": {
						"referenceName": "ds_dim_lookup",
						"type": "DatasetReference"
					},
					"name": "DimLookup"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectHospital"
				},
				{
					"name": "lookupCountryCode"
				},
				{
					"name": "selectHospitalAdmissoin"
				},
				{
					"name": "splitWeeklyDaily"
				},
				{
					"name": "aggregateECDCDate"
				},
				{
					"name": "join1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          country as string,",
				"          indicator as string,",
				"          date as date,",
				"          year_week as string,",
				"          value as double,",
				"          source as string,",
				"          url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> hospitalAdmission",
				"source(output(",
				"          country as string,",
				"          country_code_2_digit as string,",
				"          country_code_3_digit as string,",
				"          continent as string,",
				"          population as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> countrySource",
				"source(output(",
				"          date_key as string,",
				"          date as string,",
				"          year as string,",
				"          month as string,",
				"          day as string,",
				"          day_name as string,",
				"          day_of_year as string,",
				"          week_of_month as string,",
				"          week_of_year as string,",
				"          month_name as string,",
				"          year_month as string,",
				"          year_week as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DimLookup",
				"hospitalAdmission select(mapColumn(",
				"          country,",
				"          indicator,",
				"          reported_date = date,",
				"          reported_year_week = year_week,",
				"          value,",
				"          source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHospital",
				"selectHospital, countrySource lookup(selectHospital@country == countrySource@country,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'auto')~> lookupCountryCode",
				"lookupCountryCode select(mapColumn(",
				"          country = selectHospital@country,",
				"          indicator,",
				"          reported_date,",
				"          reported_year_week,",
				"          value,",
				"          source,",
				"          country = countrySource@country,",
				"          country_code_2_digit,",
				"          country_code_3_digit,",
				"          population",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectHospitalAdmissoin",
				"selectHospitalAdmissoin split(indicator=='Weekly new hospital admissions per 100k' ||indicator=='Weekly new ICU admissions per 100k',",
				"     disjoint: false) ~> splitWeeklyDaily@(Weekly, Daily)",
				"DimLookup aggregate(groupBy(ecdc_date_year = year + '-W'+ lpad(week_of_year, 2, '0')),",
				"     week_start_date = min(date),",
				"          week_end_date = max(date)) ~> aggregateECDCDate",
				"splitWeeklyDaily@Weekly, DimLookup join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1"
			]
		}
	}
}